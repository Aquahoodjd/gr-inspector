# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-inspector
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

########################################################################
# QT GUI file generation stuff (Q_OBJECT)
########################################################################
include_directories(${Qt5Widgets_INCLUDE_DIRS})
set(inspector_mod_includedir ${CMAKE_CURRENT_SOURCE_DIR}/../include/gnuradio/inspector)
set(QTGUI_MOC_HEADERS
        ${inspector_mod_includedir}/signal_marker.h
        ${inspector_mod_includedir}/inspector_form.h
        )
QT5_WRAP_CPP(QTGUI_MOC_OUTFILES ${QTGUI_MOC_HEADERS})

list(APPEND inspector_sources
        ${QTGUI_MOC_OUTFILES}
        signal_separator_c_impl.cc
        signal_detector_cvf_impl.cc
        signal_extractor_c_impl.cc
        qtgui_inspector_sink_vf_impl.cc
        inspector_form.cc
        signal_marker.cc
        ofdm_bouzegzi_c_impl.cc
        ofdm_zkf_c_impl.cc
        ofdm_synchronizer_cc_impl.cc
)

set(inspector_sources "${inspector_sources}" PARENT_SCOPE)
if(NOT inspector_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT inspector_sources)

add_library(gnuradio-inspector SHARED ${inspector_sources})
target_link_libraries(gnuradio-inspector
        gnuradio::gnuradio-runtime
        gnuradio::gnuradio-fft
        gnuradio::gnuradio-filter
        qwt::qwt
        Qt5::Widgets
        )

if(ENABLE_PYTHON)
    add_definitions(-DENABLE_PYTHON)
    #target_include_directories(gnuradio-inspector ${PYTHON_INCLUDE_DIRS})
    target_link_libraries(gnuradio-inspector ${PYTHON_LIBRARY})
endif(ENABLE_PYTHON)

target_include_directories(gnuradio-inspector
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-inspector PROPERTIES DEFINE_SYMBOL "gnuradio_inspector_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-inspector PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-inspector)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_inspector_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-inspector)

if(NOT test_inspector_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_inspector_sources)

foreach(qa_file ${test_inspector_sources})
    GR_ADD_CPP_TEST("inspector_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
