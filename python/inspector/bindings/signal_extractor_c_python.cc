/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(signal_extractor_c.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(f687c7b07ffe9188897e1ac19ed40cda)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/inspector/signal_extractor_c.h>
// pydoc.h is automatically generated in the build directory
#include <signal_extractor_c_pydoc.h>

void bind_signal_extractor_c(py::module& m)
{

    using signal_extractor_c    = ::gr::inspector::signal_extractor_c;


    py::class_<signal_extractor_c, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<signal_extractor_c>>(m, "signal_extractor_c", D(signal_extractor_c))

        .def(py::init(&signal_extractor_c::make),
           py::arg("signal"),
           py::arg("resample") = false,
           py::arg("rate") = 1.,
           py::arg("osf") = 1.,
           D(signal_extractor_c,make)
        )
        




        
        .def("set_signal",&signal_extractor_c::set_signal,       
            py::arg("signal"),
            D(signal_extractor_c,set_signal)
        )

        ;




}








