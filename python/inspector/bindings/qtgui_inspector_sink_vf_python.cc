/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(qtgui_inspector_sink_vf.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(3cba9d5762aa8be373642afe7c83fb6c)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/inspector/qtgui_inspector_sink_vf.h>
// pydoc.h is automatically generated in the build directory
#include <qtgui_inspector_sink_vf_pydoc.h>
#include <QtWidgets/qwidget.h>
void bind_qtgui_inspector_sink_vf(py::module& m)
{

    using qtgui_inspector_sink_vf    = ::gr::inspector::qtgui_inspector_sink_vf;


    py::class_<qtgui_inspector_sink_vf, gr::sync_block, gr::block, gr::basic_block,
        std::shared_ptr<qtgui_inspector_sink_vf>>(m, "qtgui_inspector_sink_vf", D(qtgui_inspector_sink_vf))

        .def(py::init(&qtgui_inspector_sink_vf::make),
           py::arg("samp_rate"),
           py::arg("fft_len"),
           py::arg("cfreq") = 0,
           py::arg("rf_unit") = 1000000,
           py::arg("msgports") = 1,
           py::arg("manual") = false,
           py::arg("parent") = nullptr,
           D(qtgui_inspector_sink_vf,make)
        )
        




        
        .def("set_rf_unit",&qtgui_inspector_sink_vf::set_rf_unit,       
            py::arg("unit"),
            D(qtgui_inspector_sink_vf,set_rf_unit)
        )


        
        .def("set_samp_rate",&qtgui_inspector_sink_vf::set_samp_rate,       
            py::arg("d_samp_rate"),
            D(qtgui_inspector_sink_vf,set_samp_rate)
        )


        
        .def("set_cfreq",&qtgui_inspector_sink_vf::set_cfreq,       
            py::arg("cfreq"),
            D(qtgui_inspector_sink_vf,set_cfreq)
        )


        
        .def("pyqwidget",[](std::shared_ptr<qtgui_inspector_sink_vf> p) {
                return PyLong_AsLongLong((PyObject*)p->pyqwidget());
            },
            D(qtgui_inspector_sink_vf,pyqwidget)
        )

        ;




}








